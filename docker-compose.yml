services:
  # PostgreSQL database for Authgear with pg_partman extension
  db:
    image: postgres:16-bookworm
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres/init-pg-partman.sh:/docker-entrypoint-initdb.d/init-pg-partman.sh
    networks:
      - authgear-network

  # Redis for Authgear session storage and caching
  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - authgear-network

  # Authgear identity provider
  authgear:
    image: quay.io/theauthgear/authgear-server:latest
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DEV_MODE: "true"
      LOG_LEVEL: debug
      DATABASE_SCHEMA: public
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
      AUDIT_DATABASE_SCHEMA: public
      AUDIT_DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
      IMAGES_DATABASE_SCHEMA: public
      IMAGES_DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
      REDIS_URL: "redis://redis:6379"
      ANALYTIC_REDIS_URL: "redis://redis:6379"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./authgear/authgear.yaml:/app/authgear.yaml
      - ./authgear/authgear.secrets.yaml:/app/authgear.secrets.yaml
    networks:
      - authgear-network

volumes:
  db_data:
  redis_data:

networks:
  authgear-network:
    driver: bridge
